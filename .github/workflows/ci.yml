# This GitHub action run formatting (via pre-commit) and testing whenever a pull-request
# is created / updated.
name: ci
on:
  # Run pipeline for pull_request events on main
  pull_request:
    branches:
      - main
  # Run pipeline if pushed on the main branch
  push:
    branches:
      - main
  repository_dispatch:
    schedule:
      - cron: '5 12 * * 0'
permissions:
  contents: write
jobs:

  run-pre-commit:
    # TODO: Use docker image created with .devcontainer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-repository
      - name: "Run pre-commit on all files"
        run: poetry run pre-commit run --all-files --verbose

  run-unit-tests:
    # TODO: Use docker image created with .devcontainer
    runs-on: ubuntu-latest
    needs: run-pre-commit
    permissions:
      contents: read
      pull-requests: write      
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-repository
      - name: 'Run unit-tests'
        run: poetry run pytest tests --cov=src/ --cov-report=term:skip-covered --cov-report=xml:coverage.xml --junitxml=pytest-junit.xml
      - name: 'Pytest coverage comment'
        if: github.event_name == 'pull_request'
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          title: Unit-Test Coverage Report
          junitxml-title: Unit-Test JUnit Report
          junitxml-path: ./pytest-junit.xml
          pytest-xml-coverage-path: ./coverage.xml
          coverage-path-prefix: src/
          badge-title: Coverage
          hide-badge: false
          hide-report: false
          create-new-comment: false
          hide-comment: false
          report-only-changed-files: false
          remove-link-from-badge: false

