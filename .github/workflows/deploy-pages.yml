# This GitHub action re-creates the documentation for the current project version
# whenever a pull-request gets opened, updated or closed.
name: deploy-pages
on: 
  pull_request:
    types:
      - opened
      - synchronize
      - closed
permissions:
  contents: write
jobs:

  parse-branch-name: 
    runs-on: "ubuntu-latest"
    outputs:
      branch_name: ${{ steps.var.outputs.branch_name}}
    steps:
      - name: "Set global variables"
        uses: actions/github-script@v6
        id: var
        with:
          script: |
            const branchName = '${{ github.head_ref }}'.toLowerCase().replace (/\//g, "_");
            core.setOutput('branch_name', branchName);

  deploy-dev-pages:
    # TODO: Use docker image created with .devcontainer
    runs-on: ubuntu-latest
    needs: parse-branch-name
    if: github.event.pull_request.merged == false
    env:
      BRANCH_NAME: ${{ needs.parse-branch-name.outputs.branch_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-repository
      - name: 'Deploy to pages with mike'
        run: |
          git fetch origin gh-pages --depth=1
          poetry run mike deploy v$(poetry version --short)-dev-${{ env.BRANCH_NAME }} -u -p

  remove-dev-pages:
    # TODO: Use docker image created with .devcontainer
    runs-on: ubuntu-latest
    needs: parse-branch-name
    if: github.event.pull_request.merged == true
    env:
      BRANCH_NAME: ${{ needs.parse-branch-name.outputs.branch_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-repository
      - name: 'Deploy to pages with mike'
        run: |
          git fetch origin gh-pages --depth=1
          poetry run mike delete v$(poetry version --short)-dev-${{ env.BRANCH_NAME }} -p

  deploy-prod-pages:
    # TODO: Use docker image created with .devcontainer
    runs-on: ubuntu-latest
    needs: remove-dev-pages
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-repository
      - name: 'Deploy to pages with mike'
        run: |
          git fetch origin gh-pages --depth=1
          poetry run mike deploy v$(poetry version --short) latest -u -p
